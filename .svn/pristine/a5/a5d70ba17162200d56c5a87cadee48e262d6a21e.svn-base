package com.puban.overtime.authority.controller;

import com.puban.overtime.authority.model.User;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

/**
 * @author zengyong@puban.com
 * @ClassName: UserController
 * @Description:
 * @date: 2016/5/13
 */

@Controller
@RequestMapping(value = "/userlogin")
public class UserController {
    /*@Autowired
    private IUserService userService;*/

    @RequestMapping(value = "/login", method = RequestMethod.GET)
    public String loginForm(Model model) {
       model.addAttribute("user", new User());
        return "view/login";
    }

    @RequestMapping(value = "/check-login", method = RequestMethod.POST)
    public String login(String fdUserName,String fdPassword) {
        System.out.print("用户名："+ fdUserName+"密码："+fdPassword);
        try {
           /* if (bindingResult.hasErrors()) {
                return "view/organization";
            }*/
            //使用权限工具进行用户登录，登录成功后跳到shiro配置的successUrl中，与下面的return没什么关系！
            SecurityUtils.getSubject().login(new UsernamePasswordToken(fdUserName, fdPassword));
            return "redirect:/view/index";
        } catch (AuthenticationException e) {
           // redirectAttributes.addFlashAttribute("message", "用户名或密码错误");
            return "view/resource";
        }
    }

    @RequestMapping(value = "/logout", method = RequestMethod.GET)
    public String logout(RedirectAttributes redirectAttributes) {
        //使用权限管理工具进行用户的退出，跳出登录，给出提示信息
        SecurityUtils.getSubject().logout();
        redirectAttributes.addFlashAttribute("message", "您已安全退出");
        return "redirect:admin/login";
    }

    @RequestMapping("/403")
    public String unauthorizedRole() {
        return "/403";
    }

    @RequestMapping(value = "/index", method = RequestMethod.GET)
    public String index(Model model) {
        model.addAttribute("user", new User());
        return "view/index";
    }
}
