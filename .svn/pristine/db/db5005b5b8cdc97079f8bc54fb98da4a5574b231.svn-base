package com.puban.apply;

import javax.annotation.Resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.puban.framework.core.page.QueryResult;
import com.puban.overtime.apply.model.OverTime;
import com.puban.overtime.apply.service.IApplyService;
import com.puban.overtime.authority.model.User;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath*:config/*/applicationContext-*.xml" })
public class ApplyTest
{
	@Resource(name = "applyService")
	IApplyService applyService;
	
	/**加班申请**/
	@Test
	public void addOverTime()
	{
		OverTime overTime = new OverTime();
		overTime.setFdStatus("1");
		overTime.setFdReason("ggg");
		User user = new User();
		user.setFdId(2);
		overTime.setUser(user);
		applyService.save(overTime);
		
	}
	
	/**查找加班申请**/
	@Test
	public void findOverTime()
	{
		applyService.findByPrimaryKey(7);
	}
	
	/**回填审批意见**/
	@Test
	public void updateOverTime()
	{
		OverTime overTime = applyService.findByPrimaryKey(7);
		overTime.setFdAdvice("no");
		applyService.update(overTime);
	}
	
	/**根据申请人查询加班申请**/
	@Test
	public void queryOverTimeByUser()
	{
		int firstindex = 1;
		int maxresult = 5;
		String wheresql = "user_id = '1'";
		QueryResult<OverTime> queryResult = applyService.
				query(firstindex, maxresult, wheresql, null);
		queryResult.getResultlist();
		queryResult.getTotalrecord();
	}
	
	/**根据审批状态查询加班申请**/
	@Test
	public void queryOverTimeByStatus()
	{
		int firstindex = 1;
		int maxresult = 5;
		String hql = "fd_advice = 'ok'";
		QueryResult<OverTime> queryResult = applyService.
				query(firstindex, maxresult, hql, null);
		queryResult.getResultlist();
		queryResult.getTotalrecord();
	}
	
	/**分页查询**/
	@Test
	public void queryOverTime()
	{
		int firstindex = 1;
		int maxresult = 5;
		QueryResult<OverTime> queryResult = applyService.query(firstindex, maxresult);
		queryResult.getResultlist();
		queryResult.getTotalrecord();
	}
}
