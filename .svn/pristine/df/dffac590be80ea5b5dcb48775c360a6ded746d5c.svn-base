package com.puban.overtime.task.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.puban.framework.core.controller.BaseController;
import com.puban.framework.core.page.PageView;
import com.puban.framework.core.page.QueryResult;
import com.puban.overtime.authority.model.User;
import com.puban.overtime.task.model.Task;
import com.puban.overtime.task.service.ITaskService;

@Controller
@RequestMapping("/task")
public class TaskController extends BaseController
{
	@Autowired
	private ITaskService taskService;
	
	@RequestMapping("/list")
	public void list(Model map)
	{
		taskService.queryTaskList();
	}
	
	@RequestMapping("/add")
	public String addTask(Task task)
	{
		User user = new User();
		user.setFdId(2);
		task.setUser(user);
		if(taskService.saveNewTask(task))
		{
			return "redirect:/apply/list";
		}
		return null;
	}
	
	@RequestMapping("/update")
	@ResponseBody
	public String updateTask(Task task)
	{
		return "success";
	}
	
	@RequestMapping("/listnormal")
	public String listNormalByUser(Integer taskcurrentpage, Integer taskselectPageSize, Model model, Integer userId)
	{
		if(null == taskcurrentpage || taskcurrentpage < 1)
		{
			taskcurrentpage = 1;
		}
		if(null == taskselectPageSize || taskselectPageSize < 1)
		{
			taskselectPageSize = 5;
		}
		QueryResult<Task> tasks = taskService.queryMyTaskList(taskcurrentpage, taskselectPageSize, 2);
		PageView<Task> taskpageView = new PageView<Task>(taskselectPageSize, taskcurrentpage);
		taskpageView.setQueryResult(tasks);
		model.addAttribute("taskpageView", taskpageView);
		return "view/apply/normalList";
	}
	
	/** 该用户已被分配的所有任务**/
	@RequestMapping("/listgive")
	public String listGiveByUser(Integer taskGivecurrentpage, Integer selecttaskGivePageSize, Model model, Integer userId)
	{
		if(null == taskGivecurrentpage || taskGivecurrentpage < 1)
		{
			taskGivecurrentpage = 1;
		}
		if(null == selecttaskGivePageSize || selecttaskGivePageSize < 1)
		{
			selecttaskGivePageSize = 5;
		}
		QueryResult<Task> tasks = taskService.queryMyTaskList(taskGivecurrentpage, selecttaskGivePageSize, 2);
		PageView<Task> taskGivePageView = new PageView<Task>(selecttaskGivePageSize, taskGivecurrentpage);
		taskGivePageView.setQueryResult(tasks);
		model.addAttribute("taskGivePageView", taskGivePageView);
		return "view/apply/giveList";
	}
	
	/** 该用户已被分配的但还未申请的所有任务**/
	@RequestMapping("/listbyuser")
	@ResponseBody
	public String listByUser(Model map, Integer userId)
	{
		List<Task> tasks = new ArrayList<Task>();
		tasks = taskService.queryMyTaskList(2);
		return JSONObject.toJSONString(tasks);
	}
	
}
